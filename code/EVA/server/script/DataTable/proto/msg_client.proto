syntax = "proto2";
package PB;

import "define_pro.proto";

message MsgLogin
{
  optional string       Version         = 1;
  optional string       Channel         = 2;
  optional string       AppName         = 3;
  optional string       User            = 4;
  optional string       NonceStr        = 5;
  optional string       Token           = 6;
  optional uint64       Timestamp       = 7;
  optional uint64       UID             = 8;
  optional string       RoomType        = 9;
  
  
}

message MsgPlayerInfo
{
  optional uint64       UID             = 1;
  optional string       Nickname        = 2;
  optional uint32       Portrait        = 3;
  optional uint64       Money           = 4;
  optional uint64       RMB             = 5;
  optional uint32       Main            = 6;
  optional uint64       FlagBit         = 7;
}

message MsgCreatePrivateRoom
{
	optional uint32 				consume_id          = 1;
	optional TGameConsumePay 		consume_kind	 	= 2;
	optional string 				room_type	        = 3;
	optional uint32 		    	special_kind        = 4;
	optional uint32 			 	score   	        = 5;
	optional uint32 				game_versione		= 6;
	optional TPaymentMechanism		pay_ment		    = 7;
	optional uint32					player_number		= 8;
	optional uint64					tissue_id			= 9;
}

message MsgEnterPrivateRoom
{
	optional uint64					room_id				= 1;
    optional string                 room_type           = 2;
	optional string 				app_name			= 3;
	optional uint32					game_version		= 4;
}

message MsgCard
{
	optional uint32                 card                = 1;
}

message MsgCards
{
    optional uint32                 type                = 1;
	repeated uint32                 cards               = 2;
}

message MsgInt
{
	optional int64      value        = 1;
}

message MsgBool
{
	optional bool       value        = 1;
}

message MsgString
{
	optional string     str        = 1;
}

message MsgError
{
	optional uint32     errno       = 1;
    optional uint64     value       = 2;
}

////////////////////////////////   Record Start    //////////////////////

message MsgRecordRoleInfo
{
	optional uint64			id        		 = 1;
	optional uint32			seat        	 = 2;
	optional string			usename   		 = 3;
	optional int64	 		score     		 = 4;
	repeated uint32 		hand_card 		 = 5;
	optional string         nick_name		 = 6;
	optional uint32			game_state		 = 7;
	optional uint32			series			 = 8;
	optional int64			current_score    = 9;
}

message MsgRecordRoomInfo
{
	optional uint32 	    special_kind      = 1;
	optional uint64 		banker			  = 2;
	optional uint32         score			  = 3;
	optional uint32			game_count		  = 4;
	repeated uint32         bottom_cards 	  = 5;
}

message MsgRecordEvent
{
	optional uint32 		event_id 		 = 1;
	optional uint32 		count	 		 = 2;
	repeated int32 			score	     	 = 3;
	repeated uint32 		score_count    	 = 4;
}

message MsgRecordWeaveCard
{
 	optional uint32 		card       		= 1;
	optional uint32			wik		   		= 2;
	optional uint32			barkind			= 3;
	repeated uint32		    mix_card		= 4;    // 组合牌;
}

message MsgRecordShowDown							
{
	optional uint64					id       		 = 1;
	optional int64					score    		 = 2;
	optional int64					fixedscore		 = 3;
	optional int64					param1   	  	 = 4;
	optional int64					param2	 		 = 5;
	optional uint32 				hucard			 = 6;
	repeated MsgRecordEvent 		event    		 = 7;
	optional int64					money			 = 8;
	optional int64          		param3			 = 9;
	optional int64          		param4			 = 10;
	optional int64          		param5			 = 11;
	optional int64          		play_id			 = 12;
	repeated uint32  				hand_card		 = 13;
	repeated MsgRecordWeaveCard 	weave_card       = 14;
	repeated uint32					hucard_list      = 15;
}

message MsgGDShowDownRole
{
	optional uint64		role_id 	 	= 1;
	optional uint32		game_count  	= 2;
	optional uint32		series		 	= 3;
	optional int32		score  	     	= 4;
	optional int32		current_score 	= 5;
}

message MsgGDRankInfo
{
	repeated uint64		rank_list		= 1;
}

message MsgRecordNodeList
{
	optional uint32					cmd_id  	 	= 1;		
	repeated uint32					card_value	 	= 2;
	optional uint32					card_index   	= 3;
	optional uint64					action_id    	= 4;
	optional uint32					action_wik	 	= 5;
	optional uint64					target_id 	 	= 6;
	optional uint32					node_size	 	= 7;
	repeated MsgRecordRoleInfo 		role_data 	  	= 8;
	optional MsgRecordRoomInfo		room_data	  	= 9;
	repeated MsgRecordShowDown		showdown_list 	= 10;
	repeated MsgRecordNodeList		next_node     	= 11;
	repeated MsgGDShowDownRole		win_role		= 12;
	repeated MsgGDShowDownRole 		lost_role		= 13;
	optional MsgGDRankInfo			room_ranking	= 14;
}



////////////////////////////////   Record End    ////////////////////////////





